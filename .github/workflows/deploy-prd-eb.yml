name: deploy with kubernetes

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - '.gitignore'
      - 'docs/**'

jobs:
  deploy:
    if: github.repository == '100-hours-a-week/1-team-1danhaebojo-coalarm-be'
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: gsandoo/coalarm
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: ✅ Checkout source code
        uses: actions/checkout@v3

      - name: 📁 Ensure resources directory exists
        run: mkdir -p src/main/resources

      - name: 📄 Restore application-prd.yml from secret
        run: |
          echo "${{ secrets.APP_PRD_YML }}" > src/main/resources/application-prd.yml

      - name: 🧪 Debug - list build context before docker build
        run: |
          echo "🔍 Check if application-prd.yml is present:"
          ls -alh ./src/main/resources
          echo "--- application-prd.yml content ---"
          cat ./src/main/resources/application-prd.yml || echo "❌ application-prd.yml not found"

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 🧱 Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: ⚙️ Build JAR with Gradle
        run: ./gradlew build -x test

      - name: 🔐 Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 🐳 Build Docker image with Git SHA tag
        run: docker build -t $IMAGE_NAME:$IMAGE_TAG .

      - name: 📤 Push Docker image to Docker Hub
        run: docker push $IMAGE_NAME:$IMAGE_TAG

      - name: ☸️ Set up kubectl
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: 🚀 Deploy to Kubernetes with Git SHA image
        run: |
          sed "s|__IMAGE_TAG__|$IMAGE_TAG|g" k8s/deployment.yaml | kubectl apply --insecure-skip-tls-verify -f -
          
      - name: 📣 Notify to Discord
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
          -X POST \
          -d '{
                "content": "@everyone ✅ 운영 환경에 배포가 정상적으로 이루어졌습니다. \n\n📦 이미지: '"$IMAGE_NAME:$IMAGE_TAG"'\n🚀 배포 완료 시간: '"$(date +'%Y-%m-%d %H:%M:%S')"'\n🔗 GitHub: https://github.com/${{ github.repository }}/commit/${{ github.sha }}"
              }' \
          ${{ secrets.DISCORD_WEBHOOK_URL }}
          